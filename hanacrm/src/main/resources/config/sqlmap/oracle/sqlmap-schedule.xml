<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schedule.ScheduleDAO">

	<resultMap type="schedule" id="scheduleMap">
		<result column="employee_no" property="employeeNo"/>
		<result column="customer_no" property="customerNo"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>

	<resultMap type="reservation" id="reservationMap">
		<result column="employee_no" property="employeeNo"/>
		<result column="customer_no" property="customerNo"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	<sql id="selectAll">
		no, employee_no, customer_no, location, type, comments,
		to_char(start_date, 'yyyy-mm-dd hh24:mi') as start_date,
		to_char(end_date, 'yyyy-mm-dd hh24:mi') as end_date,
		to_char(reg_date, 'yyyy-mm-dd hh24:mi') as reg_date, importance, repetition
	</sql>
	
	<sql id="selectTime">
		no, employee_no, customer_no, location, type, comments,
		to_char(start_date, 'hh24:mi') as start_date,
		to_char(end_date, 'hh24:mi') as end_date,
		to_char(reg_date, 'hh24:mi') as reg_date, importance, repetition
	</sql>
	
	<!-- 사원의 일정 전체 리스트 -->
	<select id="selectListAll" parameterType="int" resultMap="scheduleMap">
		select <include refid="selectAll"/>
		from schedule
		where employee_no = #{employeeNo}
	</select>

	<!-- 사원의 n월 일정 -->
	<select id="selectList" parameterType="schedule" resultMap="scheduleMap">
		select *
		from schedule
		where employee_no = #{employeeNo}
			and #{date} between to_char(start_date, 'yyyymm') and to_char(end_date, 'yyyymm')
	</select>
	
	<!-- 사원의 m월d일 Type 일정 -->
	<select id="selectListByType" parameterType="schedule" resultMap="scheduleMap">
		select <include refid="selectTime"/>
		from schedule
		<where>
			employee_no = #{employeeNo}
			<choose >
				<when test="date != null">
					and (#{date} between to_char(start_date, 'yyyy-mm-dd') and to_char(end_date, 'yyyy-mm-dd'))
				</when>
				<otherwise>
					and (to_char(sysdate, 'yyyy-mm-dd') between to_char(start_date, 'yyyy-mm-dd') and  to_char(end_date, 'yyyy-mm-dd'))
				</otherwise>
			</choose>
			<if test="type != null">
				and type = #{type}
			</if> 
		</where>
		order by start_date
	</select>
	
	<!-- 사원의 m월d일 Type 일정 for 상담내역 -->
	<select id="selectListByTypeForConsult" parameterType="schedule" resultMap="scheduleMap">
		select <include refid="selectAll"/> 
		from schedule s left join consult c 
			on (s.customer_no=c.customer_no 
				and to_char(s.start_date, 'yyyy-mm-dd')=to_char(c.reg_date, 'yyyy-mm-dd'))
		where s.employee_no=#{employeeNo} 
			and s.type='Meeting' 
			and to_char(s.start_date, 'yyyy-mm-dd')=#{date} 
			and c.no is null
		order by s.start_date
	</select>
	
	<!-- 일정 상세 정보 -->
	<select id="selectByNo" parameterType="int" resultMap="scheduleMap">
		select <include refid="selectAll"/>
		from schedule s		<!--  join customer c on (s.customer_no = c.no) -->
		where s.no = #{no}
	</select>
	
	<!-- 일정 추가 -->
	<insert id="insert" parameterType="schedule">
		insert into schedule (no, employee_no, customer_no, location, type, comments,
							 start_date, end_date, reg_date, importance, repetition)
		values (#{no}, #{employeeNo}, #{customerNo,jdbcType=NUMERIC}, #{location}, #{type}, #{comments},
				to_date(#{startDate},'YYYY-MM-DD hh24:mi'),
				<!-- <choose>
					<when test="endDate == null">
						<if test="type == 'Meeting'">
							to_date(#{startDate},'YYYY-MM-DD hh24:mi')+(1/24)
						</if>
						<if test="type == 'Call'">
							to_date(#{startDate},'YYYY-MM-DD hh24:mi')+(30/(24*60))
						</if>
					</when>
					<otherwise>
						to_date(#{endDate},'YYYY-MM-DD hh24:mi')
					</otherwise>
				</choose> -->
				to_date(#{endDate},'YYYY-MM-DD hh24:mi'), sysdate, #{importance}, #{repetition})
	</insert>
	
	<!-- 일정 수정 -->
	<update id="update" parameterType="schedule">
		update schedule
		<set> <!-- set comma는 뒤에  -->
			<if test="employeeNo!=null">
				employee_no = #{employeeNo},
			</if>
	 		<if test="location!=null">
				location = #{location},
			</if>
			<if test="type!=null">
				type = #{type},
			</if>
			<if test="comments!=null">
				comments = #{comments},
			</if>
			<if test="startDate!=null">
				start_date = to_date(#{startDate},'YYYY-MM-DD hh24:mi'),
			</if>
			<if test="endDate!=null">
				end_date = to_date(#{endDate},'YYYY-MM-DD hh24:mi'),
			</if>
			<if test="importance!=null">
				importance = #{importance},
			</if>
			<if test="repetition!=null">
				repetition = #{repetition}
			</if>
		</set>
		where no = #{no}
	</update>
	
	<!-- 일정 삭제 -->
	<delete id="delete" parameterType="int">
		delete from schedule
		where no = #{no}
	</delete>
	
	<!-- 추가할 스케쥴 번호 받아오기 -->
	<select id="selectSeq" resultType="int">
		SELECT schedule_seq.nextval FROM DUAL
	</select>
	
	<!-- 
	<select id="selectTimeList" resultType="schedule">
		select location, type, comments, to_char(start_date, 'hh24:mi') as startDate, to_char(end_date, 'hh24:mi') as endDate
		from schedule
		where employee_no = #{employeeNo}
			and (to_char(#{date}, 'yyyy-mm-dd') between to_char(start_date, 'yyyy-mm-dd') and  to_char(end_date, 'yyyy-mm-dd'))
		order by start_date, end_date
	</select>
	 -->
	
	<!-- 예약 신청 조회 -->
	<select id="selectReservation" parameterType="int" resultMap="scheduleMap">
		select no, employee_no, customer_no, name, phone, location, type, msg,
				to_char(start_date, 'yyyy-mm-dd hh24:mi') as start_date,
				to_char(end_date, 'yyyy-mm-dd hh24:mi') as end_date,
				to_char(reg_date, 'yyyy-mm-dd hh24:mi') as reg_date,
				status, comments
		from reservation
		where employee_no = #{no} and status!='Y'
		order by reg_date desc
	</select>
	
	<!-- 처리 안 된 예약 신청 조회 -->
	<select id="selectReservationDefault" parameterType="int" resultMap="scheduleMap">
		select no, employee_no, customer_no, name, phone, location, type, msg,
				to_char(start_date, 'yyyy-mm-dd hh24:mi') as start_date,
				to_char(end_date, 'yyyy-mm-dd hh24:mi') as end_date,
				to_char(reg_date, 'yyyy-mm-dd hh24:mi') as reg_date,
				status, comments
		from reservation
		where employee_no = #{no} and status='D'
		order by reg_date desc
	</select>
	
	<!-- 예약 처리 -->
	<update id="updateReservation" parameterType="schedule">
		update reservation set status = #{status}, comments = #{comments}
		where no = #{no}
	</update>
	
	<!-- 처리해야 할 예약 개수 -->
	<select id="selectReservationCount" parameterType="int" resultType="int">
		select count(*)
		from reservation
		where employee_no = #{no} and status='D'
	</select>
</mapper>
